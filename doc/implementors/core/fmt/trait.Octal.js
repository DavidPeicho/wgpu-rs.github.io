(function() {var implementors = {};
implementors["gfx_hal"] = [{"text":"impl Octal for Usage","synthetic":false,"types":[]},{"text":"impl Octal for Access","synthetic":false,"types":[]},{"text":"impl Octal for CommandBufferFlags","synthetic":false,"types":[]},{"text":"impl Octal for Aspects","synthetic":false,"types":[]},{"text":"impl Octal for ImageFeature","synthetic":false,"types":[]},{"text":"impl Octal for BufferFeature","synthetic":false,"types":[]},{"text":"impl Octal for ViewCapabilities","synthetic":false,"types":[]},{"text":"impl Octal for Usage","synthetic":false,"types":[]},{"text":"impl Octal for Access","synthetic":false,"types":[]},{"text":"impl Octal for Properties","synthetic":false,"types":[]},{"text":"impl Octal for HeapFlags","synthetic":false,"types":[]},{"text":"impl Octal for Dependencies","synthetic":false,"types":[]},{"text":"impl Octal for CommandPoolCreateFlags","synthetic":false,"types":[]},{"text":"impl Octal for DescriptorPoolCreateFlags","synthetic":false,"types":[]},{"text":"impl Octal for ColorMask","synthetic":false,"types":[]},{"text":"impl Octal for Face","synthetic":false,"types":[]},{"text":"impl Octal for PipelineStage","synthetic":false,"types":[]},{"text":"impl Octal for ShaderStageFlags","synthetic":false,"types":[]},{"text":"impl Octal for PipelineCreationFlags","synthetic":false,"types":[]},{"text":"impl Octal for ControlFlags","synthetic":false,"types":[]},{"text":"impl Octal for ResultFlags","synthetic":false,"types":[]},{"text":"impl Octal for PipelineStatistic","synthetic":false,"types":[]},{"text":"impl Octal for PresentMode","synthetic":false,"types":[]},{"text":"impl Octal for CompositeAlphaMode","synthetic":false,"types":[]},{"text":"impl Octal for Features","synthetic":false,"types":[]},{"text":"impl Octal for Hints","synthetic":false,"types":[]}];
implementors["gpu_alloc"] = [{"text":"impl Octal for UsageFlags","synthetic":false,"types":[]}];
implementors["gpu_alloc_types"] = [{"text":"impl Octal for AllocationFlags","synthetic":false,"types":[]},{"text":"impl Octal for MemoryPropertyFlags","synthetic":false,"types":[]}];
implementors["gpu_descriptor"] = [{"text":"impl Octal for DescriptorSetLayoutCreateFlags","synthetic":false,"types":[]}];
implementors["gpu_descriptor_types"] = [{"text":"impl Octal for DescriptorPoolCreateFlags","synthetic":false,"types":[]}];
implementors["naga"] = [{"text":"impl Octal for WriterFlags","synthetic":false,"types":[]},{"text":"impl Octal for SamplingFlags","synthetic":false,"types":[]},{"text":"impl Octal for StorageAccess","synthetic":false,"types":[]},{"text":"impl Octal for GlobalUse","synthetic":false,"types":[]}];
implementors["ron"] = [{"text":"impl Octal for Extensions","synthetic":false,"types":[]}];
implementors["spirv_headers"] = [{"text":"impl Octal for ImageOperands","synthetic":false,"types":[]},{"text":"impl Octal for FPFastMathMode","synthetic":false,"types":[]},{"text":"impl Octal for SelectionControl","synthetic":false,"types":[]},{"text":"impl Octal for LoopControl","synthetic":false,"types":[]},{"text":"impl Octal for FunctionControl","synthetic":false,"types":[]},{"text":"impl Octal for MemorySemantics","synthetic":false,"types":[]},{"text":"impl Octal for MemoryAccess","synthetic":false,"types":[]},{"text":"impl Octal for KernelProfilingInfo","synthetic":false,"types":[]},{"text":"impl Octal for RayFlags","synthetic":false,"types":[]}];
implementors["wgpu_core"] = [{"text":"impl Octal for PipelineFlags","synthetic":false,"types":[]},{"text":"impl Octal for BufferUse","synthetic":false,"types":[]},{"text":"impl Octal for TextureUse","synthetic":false,"types":[]}];
implementors["wgpu_types"] = [{"text":"impl Octal for BackendBit","synthetic":false,"types":[]},{"text":"impl Octal for Features","synthetic":false,"types":[]},{"text":"impl Octal for ShaderStage","synthetic":false,"types":[]},{"text":"impl Octal for ColorWrite","synthetic":false,"types":[]},{"text":"impl Octal for BufferUsage","synthetic":false,"types":[]},{"text":"impl Octal for TextureUsage","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()